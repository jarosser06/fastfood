.\" Manpage for fastfood.
.TH man 8 "12 December 2014" "0.1.0" "fastfood man page"
.SH NAME
fastfood \- a chef helper
.SH SYNOPSIS
fastfood [COMMAND] [OPTIONS]
.SH DESCRIPTION
fastfood helps generate new cookbooks and recipes for
existing cookbooks.
.SH ENVIRONMENT VARIABLES
Some command options allow you to set defaults with environment variables
but keep in mind that any arguments passed to the command will always
get used over the defaults.
\n
.B COOKBOOKS=\fIPATH TO COOKBOOKS DIRECTORY\fR
\n
.B FASTFOOD_TEMPLATE_PACK=\fIPATH TO TEMPLATE PACK\fR
.SH COMMANDS
.SS NEW
.B fastfood new
[\fB-cookbooks-dir \fR\fICOOKBOOKSDIR\fR]
[COOKBOOKNAME]

.SS GEN
.B fastfood gen
[\fB-template-pack \fR\fIPATH\fI]
[\fISTENCILSET\fR]
.IR options ...

.SS BUILD
.B fastfood build
[\fB-template-pack \fR\fIPATH\fI]
[\fB-cookbooks-dir \fR\fIPATH\fI]
[\fIJSONTEMPLATE\fR]

.SH NOTES
\-
All stencil options are passed using a key:value notation.
\n
\-
Node attributes using node['*'] and node.* passed should render
correctly without being wrapped in quotes if the stencil author
used the QSTRING helper.
.SH MANIFESTS
.SS BASE
The base manifest is found at the root of the template pack.  This
manifest is how fastfood knows what cookbook files to generate
and what stencil setss are available to it.
\n
A sample base manifest:
\n
.P
{
  "api": 1,
  "framework": "chef",
  "stencil_sets": {
    "a_stencilset": {
      "help": "Some info about the stencilset"
    }
  },
  "base": {
    "files": [
      "metadata.rb",
      "README.md"
    ],
    "directories": [
      "attributes",
      "files",
      "libraries",
      "providers",
      "recipes",
      "resources",
      "templates"
    ]
  }

}
.B
.SS Stencil Set
The stencil set manifest describes a stencil set and all of the available
stencils in that set.  There is no restriction on naming a stencil set,
how many options a stencil can have or even how many stencils a set
can have.  A stencil also has the ability to override option defaults.
\n
A stencil set's files takes a map with the name of the file to be
written as the key and the template file included in the pack as
the argument.
\n
A Sample stencil manifest:
.P
{
  "id": "webserver",
  "api": 1,
  "framework": "chef",
  "default_stencil": "nginx",
  "dependencies": [
    "iptables"
  ],
  "options": {
    "name":" {
      "help": "Name of the recipe to create",
      "default": "my_stencil"
    }
  },
  "stencils": {
    "nginx": {
      "dependencies": [
        "nginx"
      ],
      "files": {
        "recipes/<NAME>.rb": "recipes/nginx.rb",
        "test/unit/spec/<NAME>_spec.rb": "test/unit/spec/nginx_spec.rb"
      },
      "options": {
        "name": {
          "default": "nginx_node"
        }
      }
    }
  }

}
